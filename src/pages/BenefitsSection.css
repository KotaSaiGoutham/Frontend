/* --- Benefits Section CSS --- */
:root {
  /* Define your color variables */
  --dark-indigo: #292551;
  --dark-indigo-rgb: 41, 37, 81; /* Added for rgba shadows */
  --slate-gray: #454E5B;
  --deep-magenta: #B21F62;
  --hot-pink: #DB1A66;
  --light-gray: #DCD9DA;
  --orange: #F26E26;
  --golden-yellow: #F6A11F;
  --bright-yellow: #FCCD11;

  /* UI specific colors from your palette */
  --color-primary-text: var(--dark-indigo);
  --color-secondary-text: var(--slate-gray);
  --color-accent: var(--hot-pink); /* Using Hot Pink for primary accent */
  --color-accent-dark: var(--deep-magenta); /* Using Deep Magenta for stronger accent */
  --color-background-light: #FDFDFD; /* A very subtle off-white for main background */
  --color-card-background: #FFFFFF; /* Pure white for cards */
  --color-border-light: rgba(220, 217, 218, 0.5); /* Light Gray with transparency for borders */
}

/* Optional: Import a modern font for a cleaner look */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800&display=swap');

body {
  font-family: 'Poppins', sans-serif; /* Apply a clean, modern font */
}

/* ... (previous styles for :root, body, flash-banner, etc. remain the same) ... */

.benefits {
  padding: 6rem 1.5rem;
  background-color: var(--color-background-light);
  text-align: center;
  overflow: hidden;
}

.benefits h2 {
  font-size: 3.2rem;
  color: var(--color-primary-text);
  margin-bottom: 3.8rem;
  position: relative;
  display: inline-block;
  padding-bottom: 0.8rem;
  font-weight: 700;
  letter-spacing: -0.03em;
}

.benefits h2::after {
  content: '';
  position: absolute;
  left: 50%;
  bottom: 0;
  transform: translateX(-50%);
  width: 100px;
  height: 5px;
  background: linear-gradient(to right, var(--color-accent-dark), var(--color-accent));
  border-radius: 3px;
}

.benefit-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2.5rem;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.card {
  background-color: var(--color-card-background);
  border-radius: 18px;
  box-shadow: 0 6px 20px rgba(var(--dark-indigo-rgb), 0.08);
  padding: 3rem 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  border: 1px solid var(--color-border-light);
  transition: transform 0.4s ease-out, box-shadow 0.4s ease-out, border-color 0.4s ease-out;
  will-change: transform, box-shadow;

  opacity: 0;
  transform: translateY(60px);
}

.card.visible {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 1s cubic-bezier(0.2, 0.8, 0.2, 1), transform 1s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.card:nth-child(1).visible { transition-delay: 0s; }
.card:nth-child(2).visible { transition-delay: 0.12s; }
.card:nth-child(3).visible { transition-delay: 0.24s; }
.card:nth-child(4).visible { transition-delay: 0.36s; }
.card:nth-child(5).visible { transition-delay: 0.48s; }
.card:nth-child(6).visible { transition-delay: 0.60s; }

.icon-container {
  margin-bottom: 10px;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  flex-shrink: 0; /* Prevents container from shrinking */

  /* --- CENTERING THE .value-icon DIV WITHIN ITS CONTAINER --- */
  display: grid; /* Most reliable for centering a single item */
  place-items: center; /* Shorthand for align-items: center and justify-items: center */
}

.value-icon {
  font-size: 32px; /* Set the desired emoji size */
  line-height: 1; /* Crucial for vertical alignment of text/emojis */

  /* --- CENTERING THE EMOJI *WITHIN* THE .value-icon DIV --- */
  /* Use display: flex on the value-icon itself to align the emoji content */
  display: flex;
  justify-content: center;
  align-items: center;
  /* Set explicit width/height to the font-size to ensure a precise box for the emoji */
  width: 1em; /* This means 32px (1 * 32px) */
  height: 1em; /* This means 32px (1 * 32px) */

  /* --- FINE-TUNING FOR VISUAL ALIGNMENT --- */
  /* Emojis often need slight pixel nudges for perfect *visual* centering
     because their glyph box doesn't always match their perceived center.
     Adjust these `top` values *very slightly* based on visual inspection
     for each problematic emoji. You might need different values for each. */
  position: relative;
  /* Default subtle nudge that often works for many emojis */
  top: 0.02em; /* Try 0.02em, 0.03em, 0.05em, or even -0.01em if it's too low */
  /* left: 0.00em; */ /* Uncomment and adjust if horizontal alignment is off */

  /* You can add specific overrides if a particular emoji is still problematic: */
  /* For example, if the globe (üåê) is still high: */
  /* .card:nth-child(2) .value-icon { top: 0.05em; } */
  /* If the timer (‚è±Ô∏è) is too low: */
  /* .card:nth-child(3) .value-icon { top: -0.01em; } */
}

/* Hover effect for the entire card */
.card:hover {
  transform: translateY(-8px);
  box-shadow: 0 12px 30px rgba(var(--dark-indigo-rgb), 0.12);
  border-color: var(--color-accent);
}

/* Icon scale on card hover */
.card:hover .icon-container {
  transform: scale(1.1);
}


.card-content h3 {
  font-size: 1.65rem;
  margin-bottom: 0.8rem;
  color: var(--color-primary-text);
  font-weight: 600;
  letter-spacing: -0.02em;
}

.card-content p {
  font-size: 1.05rem;
  color: var(--color-secondary-text);
  line-height: 1.6;
  margin: 0;
  max-width: 320px;
}


/* Responsive adjustments */
@media (max-width: 767px) {
  .benefits {
    padding: 3rem 1rem;
  }

  .benefits h2 {
    font-size: 2.2rem;
    margin-bottom: 2.5rem;
  }

  .benefits h2::after {
    width: 60px;
    height: 3px;
  }

  .benefit-cards {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .card {
    padding: 2.5rem 1.5rem;
  }

  .icon-container {
    margin-bottom: 1.2rem;
    width: 50px;
    height: 50px;
  }

  .value-icon {
    font-size: 28px; /* Smaller font size for mobile */
    /* Adjust these nudges for mobile if needed, might be different */
    top: 0.02em;
    /* left: 0.00em; */
  }

  .card-content h3 {
    font-size: 1.4rem;
  }

  .card-content p {
    font-size: 0.95rem;
    max-width: none;
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  .benefit-cards {
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
  .card {
    padding: 2.5rem;
  }
}

@media (min-width: 1024px) {
  .benefit-cards {
    grid-template-columns: repeat(3, 1fr);
  }
}